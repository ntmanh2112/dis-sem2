/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AchivementView.java
 *
 * Created on Nov 24, 2011, 4:44:26 PM
 */

package Views;
import Model.Check;
import Model.Doct;
import Models.AchievementModel;
import Control.DBHelper;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author De
 */
public class AchivementView extends javax.swing.JFrame {
    AchievementModel mArchi = new AchievementModel();
    views.HomeView vHome = new views.HomeView();
    /** Creates new form AchivementView */
    // DBHelper db = new DBHelper();
    Vector vLoad;
    String nameTable = "";
    public AchivementView() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        } catch (IllegalAccessException ex) {
            ex.printStackTrace();
        } catch (InstantiationException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
        initComponents();
        try {
                vLoad = mArchi.getAllAchievement();
                this.loadTableAchievement(nameTable,vLoad);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
    }

    public AchivementView(views.HomeView vHome) {
        
        this.vHome = vHome;
        initComponents();
        try {
                vLoad = mArchi.getAllAchievement();
                this.loadTableAchievement(nameTable,vLoad);
                this.setLocationRelativeTo(null);
                this.setVisible(true);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelAchievement = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAchivement = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldAchievementID = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDesciption = new javax.swing.JTextArea();
        jComboBoxDoctorID = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        cmdClose = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Manage Archivement");
        setResizable(false);

        jLabel1.setText("Achivement");

        jTableAchivement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jTableAchivement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAchivementMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAchivement);

        jLabel2.setText("Achievement ID:");

        jLabel3.setText("Doctor ID:");

        jLabel4.setText("Desciption * :");

        jTextAreaDesciption.setColumns(20);
        jTextAreaDesciption.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDesciption);

        jComboBoxDoctorID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .addComponent(jComboBoxDoctorID, javax.swing.GroupLayout.Alignment.LEADING, 0, 373, Short.MAX_VALUE)
                    .addComponent(jTextFieldAchievementID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAchievementID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        cmdClose.setText("Close");
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jButtonAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdClose)
                .addGap(36, 36, 36))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonReset)
                    .addComponent(jButtonAdd)
                    .addComponent(cmdClose)))
        );

        javax.swing.GroupLayout jPanelAchievementLayout = new javax.swing.GroupLayout(jPanelAchievement);
        jPanelAchievement.setLayout(jPanelAchievementLayout);
        jPanelAchievementLayout.setHorizontalGroup(
            jPanelAchievementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAchievementLayout.createSequentialGroup()
                .addGroup(jPanelAchievementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAchievementLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelAchievementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAchievementLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(151, 151, 151))
                            .addGroup(jPanelAchievementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelAchievementLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAchievementLayout.setVerticalGroup(
            jPanelAchievementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAchievementLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/top-banner-archivement.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelAchievement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelAchievement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     *
     * @param evt
     */
    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        // TODO add your handling code here:
        jTextAreaDesciption.setText("");
        jTextFieldAchievementID.setText("      IDENTITY       ");
    }//GEN-LAST:event_jButtonResetActionPerformed
    /**
     *
     * @param evt
     */
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        int test=0;
        if(!this.checkAchievement())
           return;
        AchievementModel objAchivement = new AchievementModel();
        
        objAchivement.setDesciption(jTextAreaDesciption.getText());
        objAchivement.setDoctor_id(jComboBoxDoctorID.getSelectedItem().toString());
        try {
            test = mArchi.insertAchievement(objAchivement);
            if(test==1) {
                JOptionPane.showMessageDialog(this,"Add sucsessful !","Inform",JOptionPane.INFORMATION_MESSAGE);
                vLoad=mArchi.getAllAchievement();
                this.loadTableAchievement(nameTable,vLoad);
            } else {
                JOptionPane.showMessageDialog(this,"Error!","Inform",JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
         }
    }//GEN-LAST:event_jButtonAddActionPerformed
    /**
     *
     * @param evt
     */
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int show = JOptionPane.showConfirmDialog(this, "Are You sure delete ?", "Inform", JOptionPane.YES_NO_OPTION);
        if (show == JOptionPane.YES_OPTION) {
            int test = 0, count = 0;
            int[] rArr = jTableAchivement.getSelectedRows();
            try {
                for (int i = 0; i < rArr.length; i++) {
                    test = mArchi.deleteAchievement(jTableAchivement.getValueAt(rArr[i], 0).toString());
                    if (test == 1) {
                        count++;
                    }
                }
                if (count > 0) {
                    JOptionPane.showMessageDialog(this, "Deleted " + count + " record ", "successful.", JOptionPane.INFORMATION_MESSAGE);
                    vLoad = mArchi.getAllAchievement();
                    this.loadTableAchievement(nameTable, vLoad);
                } else {
                    JOptionPane.showMessageDialog(this, "Error", "Inform", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed
   
    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
                int test=0;
        if(!this.checkAchievement())
            return;
        AchievementModel objAchivement = new AchievementModel();
        objAchivement.setAchievement_id(jTextFieldAchievementID.getText());
        objAchivement.setDesciption(jTextAreaDesciption.getText());
        objAchivement.setDoctor_id(jComboBoxDoctorID.getSelectedItem().toString());
        try {
            test = mArchi.updateAchievement(objAchivement);
            if(test==1) {
                JOptionPane.showMessageDialog(this,"Update sucsessful !","Inform",JOptionPane.INFORMATION_MESSAGE);
                vLoad=mArchi.getAllAchievement();
                this.loadTableAchievement(nameTable,vLoad);
            } else {
                JOptionPane.showMessageDialog(this,"Error!","Inform",JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed
    /**
     *
     * @param evt
     */
    private void jTableAchivementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAchivementMouseClicked
        // TODO add your handling code here:
               int r = jTableAchivement.getSelectedRow();
        if(r<0){
            return;
        }
        jTextFieldAchievementID.setText(""+jTableAchivement.getValueAt(r,0).toString().trim()) ;
        jTextAreaDesciption.setText(""+jTableAchivement.getValueAt(r,1)) ;
        for(int i=0; i<comboDoctorID.getSize(); i++) {
            if(modelAchievement.getValueAt(jTableAchivement.getSelectedRow(), 2).equals(comboDoctorID.getElementAt(i)))
                jComboBoxDoctorID.setSelectedIndex(i);
        }
    }//GEN-LAST:event_jTableAchivementMouseClicked

    private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed
        this.vHome.setEnabled(true);
        this.setVisible(false);
    }//GEN-LAST:event_cmdCloseActionPerformed
    /**
     * 
     * @param nameTable
     * @param vLoad
     * @throws SQLException
     */
    private void loadTableAchievement(String nameTable, Vector vLoad) throws SQLException {
        jPanelAchievement.setVisible(true);
        try {
            modelAchievement.setNumRows(0);
            Vector columnAchi = new Vector();
            columnAchi.addElement("Achievement ID");
            columnAchi.addElement("Desciption");
            columnAchi.addElement("Doctor ID");
            modelAchievement.setColumnIdentifiers(columnAchi);
            AchievementModel objAchi = new AchievementModel();
            for (int i = 0; i < this.vLoad.size(); i++) {
                objAchi = (AchievementModel) this.vLoad.get(i);
                Vector rowAchi = new Vector();
                rowAchi.addElement(objAchi.getAchievement_id());
                rowAchi.addElement(objAchi.getDesciption());
                rowAchi.addElement(objAchi.getDoctor_id());
                modelAchievement.addRow(rowAchi);
            }
            jTableAchivement.setModel(modelAchievement);

            Vector vDoctor = new Vector();
            vDoctor = Doct.getAllDoctor();
            Doct objDoctor = new Doct();
            comboDoctorID.removeAllElements();
            for (int j = 0; j < vDoctor.size(); j++) {
                objDoctor = (Doct) vDoctor.get(j);
                comboDoctorID.addElement(objDoctor.getDoctor_id());
            }
            jComboBoxDoctorID.setModel(comboDoctorID);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
    /**
     * Method checkAchievement()
     * @return
     */
    private boolean checkAchievement() {
        Check ck = new Check();
        if (!ck.checkTxtArea(jTextAreaDesciption.getText())) {
            JOptionPane.showMessageDialog(this, "Achievement name invalid", "Inform", JOptionPane.ERROR_MESSAGE);
            jTextAreaDesciption.setText("");
            jTextAreaDesciption.requestFocus();
            return false;
        }
        return true;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AchivementView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdClose;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox jComboBoxDoctorID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelAchievement;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAchivement;
    private javax.swing.JTextArea jTextAreaDesciption;
    private javax.swing.JTextField jTextFieldAchievementID;
    // End of variables declaration//GEN-END:variables
private DefaultTableModel modelAchievement = new DefaultTableModel();
private DefaultComboBoxModel comboDoctorID = new DefaultComboBoxModel();
}
